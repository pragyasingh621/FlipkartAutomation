<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="148279" started-at="2022-06-04T13:21:55 IST" finished-at="2022-06-04T13:24:23 IST">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.FlipkartAutomation.runner.FlipkartRunner@17695df3]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="148279" started-at="2022-06-04T13:21:55 IST" finished-at="2022-06-04T13:24:23 IST">
      <class name="com.FlipkartAutomation.runner.FlipkartRunner">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:com.FlipkartAutomation.runner.FlipkartRunner@17695df3]" name="setUpClass" is-config="true" duration-ms="262" started-at="2022-06-04T13:21:55 IST" finished-at="2022-06-04T13:21:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.FlipkartAutomation.runner.FlipkartRunner@17695df3]" name="runScenario" duration-ms="100629" started-at="2022-06-04T13:21:55 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-06-04T13:23:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Compare price of  same Item on flipkart and amazon"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[This will test the search functionality of amazon for same item on flipkart]"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"._2doB4z"}
  (Session info: chrome=102.0.5005.63)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0-rc-1', revision: 'bc5511cbda'
System info: host: 'PRSI-DEL-01', ip: '192.168.0.188', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_301'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2aa7abffdb9bb094d197ed32accb0306, findElement {using=css selector, value=._2doB4z}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.63, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\PRAGYA~1.SIN\AppDa...}, goog:chromeOptions: {debuggerAddress: localhost:49871}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:49871/devtoo..., se:cdpVersion: 102.0.5005.63, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 2aa7abffdb9bb094d197ed32accb0306]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"._2doB4z"}
  (Session info: chrome=102.0.5005.63)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0-rc-1', revision: 'bc5511cbda'
System info: host: 'PRSI-DEL-01', ip: '192.168.0.188', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_301'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2aa7abffdb9bb094d197ed32accb0306, findElement {using=css selector, value=._2doB4z}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 102.0.5005.63, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\PRAGYA~1.SIN\AppDa...}, goog:chromeOptions: {debuggerAddress: localhost:49871}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:49871/devtoo..., se:cdpVersion: 102.0.5005.63, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 2aa7abffdb9bb094d197ed32accb0306
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:381)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:373)
at org.openqa.selenium.By$PreW3CLocator.findElement(By.java:429)
at org.openqa.selenium.By$ByClassName.findElement(By.java:298)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$1.findElement(ElementLocation.java:136)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:381)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:373)
at com.FlipkartAutomation.Pages.FlipkartLoginPage.cancelLogin(FlipkartLoginPage.java:17)
at com.FlipkartAutomation.StepDefinition.FlipkartSearchItemStepDefinition.user_search_for_in_search_box(FlipkartSearchItemStepDefinition.java:37)
at âœ½.user search for "Samsung Galaxy M33 5G " in search box(file:///C:/Users/pragya.singh/eclipse-workspace/FlipkartAutomation/src/main/java/com/FlipkartAutomation/featurefile/AmazonSearchItem.feature:12)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.FlipkartAutomation.runner.FlipkartRunner@17695df3]" name="runScenario" duration-ms="47338" started-at="2022-06-04T13:23:36 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-06-04T13:24:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search Item and Add it to cart"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search Item]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:com.FlipkartAutomation.runner.FlipkartRunner@17695df3]" name="tearDownClass" is-config="true" duration-ms="10" started-at="2022-06-04T13:24:23 IST" finished-at="2022-06-04T13:24:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.FlipkartAutomation.runner.FlipkartRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
